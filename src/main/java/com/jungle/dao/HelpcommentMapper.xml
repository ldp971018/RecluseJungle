<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jungle.dao.HelpcommentMapper">
    <resultMap id="BaseResultMap" type="com.jungle.bean.Helpcomment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="helpid" property="helpinfo.id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMap" type="com.jungle.bean.Helpcomment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <!--<result column="helpid" property="helpid" jdbcType="INTEGER" />-->
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="VARCHAR"/>
        <association property="helpinfo" column="helpid"
                     select="com.jungle.dao.HelpinfoMapper.selectByPrimaryKey"></association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, helpid, uid, content, time
  </sql>
    <select id="selectByExample" resultMap="ResultMap" parameterType="com.jungle.bean.HelpcommentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from helpcomment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from helpcomment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from helpcomment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.jungle.bean.HelpcommentExample">
        delete from helpcomment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jungle.bean.Helpcomment">
    insert into helpcomment (id, helpid, uid, 
      content, time)
    values (#{id,jdbcType=INTEGER}, #{helpid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.jungle.bean.Helpcomment">
        insert into helpcomment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="helpinfo.id != null">
                helpid,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="time != null">
                time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="helpinfo.id != null">
                #{helpinfo.id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jungle.bean.HelpcommentExample" resultType="java.lang.Integer">
        select count(*) from helpcomment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update helpcomment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.helpinfo.id != null">
                helpid = #{record.helpinfo.id,jdbcType=INTEGER},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update helpcomment
        set id = #{record.id,jdbcType=INTEGER},
        helpid = #{record.helpinfo.id,jdbcType=INTEGER},
        uid = #{record.uid,jdbcType=INTEGER},
        content = #{record.content,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jungle.bean.Helpcomment">
        update helpcomment
        <set>
            <if test="helpinfo.id != null">
                helpid = #{helpinfo.id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jungle.bean.Helpcomment">
    update helpcomment
    set helpid = #{helpinfo.id,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>